version: "2.2"

services:
  physedjournal:
    image: "ghcr.io/pritexx/physedjournal:latest"
    labels:
      logging: "promtail"
    restart: always
    container_name: physedjournal
    env_file:
      - .env.secret
    depends_on: 
      loki:
        condition: service_healthy
  
  prometheus:
    image: prom/prometheus:v2.47.0
    restart: always
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--web.external-url=/prometheus/'
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    depends_on:
      - physedjournal
  
  loki:
    image: grafana/loki:2.8.0
    container_name: loki
    volumes:
      - loki-data:/loki
      - ./loki/loki.yaml:/etc/config/loki.yaml
    command: -config.file=/etc/config/loki.yaml
    healthcheck:
      test: wget -q --tries=1 -O- http://localhost:3100/ready
      interval: 3s
      timeout: 3s
      retries: 10
      
  promtail:
    image: grafana/promtail:2.9.0
    container_name: promtail
    restart: always
    volumes:
      - ./promtail/promtail.yaml:/etc/promtail/docker-config.yaml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
    command: -config.file=/etc/promtail/docker-config.yaml
    depends_on: 
      loki:
        condition: service_healthy
  
  grafana:
    image: grafana/grafana:9.5.6
    volumes:
      - grafana-data:/var/lib/grafana
    container_name: grafana
    restart: always
    environment:
      GF_SERVER_ROOT_URL: "%(protocol)s://%(domain)s:%(http_port)s/physedjournal/grafana/"
      GF_SERVER_SERVE_FROM_SUB_PATH: "true"
    depends_on: 
      - prometheus
      - loki
  
  node_exporter:
    image: quay.io/prometheus/node-exporter:v1.5.0
    container_name: node_exporter
    command: "--path.rootfs=/host"
    pid: host
    restart: always
    volumes:
      - /:/host:ro,rslave

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.2
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    privileged: true
    restart: always
  
  nginx:
    image: nginx:1.23
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - physedjournal
    volumes:
      - /etc/letsencrypt:/etc/certs:ro
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    restart: always

volumes:
  prometheus-data:
    driver: local    
  grafana-data:
    driver: local
  loki-data:
    driver: local    