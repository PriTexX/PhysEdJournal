version: "2.2"

services:
  physedjournal:
    image: "ghcr.io/pritexx/physedjournal:${IMAGE_TAG}"
    labels:
      logging: "promtail"
    restart: always
    container_name: physedjournal
    env_file:
      - .env.secret
    depends_on: 
      loki:
        condition: service_healthy
        
  admin-api:
    image: "ghcr.io/pritexx/physedjournal:${IMAGE_TAG}-admin-api"
    restart: always
    container_name: phys-admin-api
    env_file:
      - .env.secret
        
  admin-ui:
    image: "ghcr.io/pritexx/physedjournal:${IMAGE_TAG}-admin-ui"
    restart: always
    container_name: phys-admin-ui
    env_file:
      - .env.secret
  
  prometheus:
    image: prom/prometheus:v2.47.0
    restart: always
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--web.external-url=/prometheus/'
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    depends_on:
      - physedjournal

  seq:
    image: datalust/seq:2024.3
    container_name: phys-seq
    restart: always
    volumes:
      - seq-data:/data
    environment:
      ACCEPT_EULA: "Y"
  
  grafana:
    image: grafana/grafana:9.5.6
    volumes:
      - grafana-data:/var/lib/grafana
    container_name: grafana
    restart: always
    environment:
      GF_SERVER_ROOT_URL: "%(protocol)s://%(domain)s:%(http_port)s/physedjournal/grafana/"
      GF_SERVER_SERVE_FROM_SUB_PATH: "true"
    depends_on: 
      - prometheus
      - loki
  
  node_exporter:
    image: quay.io/prometheus/node-exporter:v1.5.0
    container_name: node_exporter
    command: "--path.rootfs=/host"
    restart: always
    pid: host
    volumes:
      - /:/host:ro,rslave

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.2
    container_name: cadvisor
    restart: always
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    privileged: true
  
  nginx:
    image: nginx:1.23
    container_name: nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - physedjournal
    volumes:
      - /etc/letsencrypt:/etc/certs:ro
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro

volumes:
  prometheus-data:
    driver: local    
  grafana-data:
    driver: local
  seq-data:
    driver: local    